trigger:
  batch: true
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

schedules:
  - cron: '0 0 * * 0'
    displayName: Weekly build
    branches:
      include:
        - main
    always: true

resources:
  repositories:
    - repository: OpsGuildAutomationRepo
      type: git
      name: DevOps/opsguild.automation
      ref: refs/heads/main
    - repository: templates
      type: github
      name: AVEVA/AVEVA-Samples
      endpoint: AVEVA
    - repository: library
      type: github
      name: AVEVA/sample-adh-sample_libraries-java
      endpoint: AVEVA

variables:
  - name: analysisProject
    value: SDS_Java

parameters:
  - name: poolADH
    default: DevOps Managed Containers Build
  - name: containerDemandsADH
    type: object
    default: ['Agent.OS -equals $(agentOS)']
  - name: poolEDS
    default: DevOps Managed Containers Build
  - name: containerDemandsEDS
    type: object
    default: ['Agent.OS']

jobs:
  - job: Tests_ADH
    condition: ne(variables['Build.Reason'], 'Schedule')
    strategy:
      maxParallel: 1 # Avoid conflicts in ADH
      matrix:
        linux:
          agentOS: Linux
        windows:
          agentOS: Windows_NT
    pool:
      name: ${{ parameters.poolADH }}
      demands: ${{ parameters.containerDemandsADH }}
    steps:
      - checkout: self
        path: 's'
      - checkout: library
        path: 's/lib'

      - template: '/miscellaneous/build_templates/appsettings.yml@templates'
        parameters:
          secrets: 'TenantId, NamespaceId, CommunityId, ClientId, ClientSecret, Resource'

      - task: JavaToolInstaller@0
        inputs:
          versionSpec: '11'
          jdkArchitectureOption: 'x64'
          jdkSourceOption: 'PreInstalled'
          jdkDestinationDirectory: '$(Agent.ToolsDirectory)/jdk11'
          cleanDestinationDirectory: false
        condition: eq(variables['Agent.OS'], 'Linux')

      - script: mvn install -f pom.xml
        workingDirectory: $(Build.SourcesDirectory)/lib
        displayName: 'Maven install library'

      - task: Maven@3
        inputs:
          mavenPomFile: '$(Build.SourcesDirectory)/pom.xml'
          goals: 'test'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          testRunTitle: '$(Agent.JobName) on $(Agent.OS)'
        displayName: 'Run tests'

  - job: Tests_EDS
    condition: ne(variables['Build.Reason'], 'Schedule')
    pool:
      name: ${{ parameters.poolEDS }}
      demands: ${{ parameters.containerDemandsEDS }}
    variables:
      - name: TenantId
        value: default
      - name: NamespaceId
        value: default
      - name: Resource
        value: http://localhost:5590
    steps:
      - checkout: self
        path: 's'
      - checkout: library
        path: 's/lib'

      - template: '/miscellaneous/build_templates/appsettings.yml@templates'

      - script: mvn install -f pom.xml
        workingDirectory: $(Build.SourcesDirectory)/lib
        displayName: 'Maven install library'

      - task: Maven@3
        inputs:
          mavenPomFile: '$(Build.SourcesDirectory)/pom.xml'
          goals: 'test'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          testRunTitle: '$(Agent.JobName) on $(Agent.OS)'
        displayName: 'Run tests'

  - template: '/miscellaneous/build_templates/code-analysis.yml@templates'
    parameters:
      buildSteps:
        - checkout: self
          path: 's'
        - checkout: library
          path: 's/lib'

        - script: mvn install -f pom.xml
          workingDirectory: $(Build.SourcesDirectory)/lib
          displayName: 'Maven install library'

        - task: Maven@3
          inputs:
            mavenPomFile: '$(Build.SourcesDirectory)/pom.xml'
            goals: 'package'
            options: '-DskipTests'
          displayName: 'Build'
